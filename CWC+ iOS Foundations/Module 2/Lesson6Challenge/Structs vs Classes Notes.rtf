{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Overview: Structs (Value types) are passed as copies and Classes (Reference types) are passed by reference\
\
Structs are pass by value \
\
Ex: \
Struct Shon() \{\
	//code here \
\}\
\
Var obj1 = Shon() \
Var obj2 = obj1 \
\
This will make obj2 have the same values but they will not share a reference; obj1 and obj2 are not pointing to the same piece of data \
\
\
\
Classes use reference values \
Ex: \
Class Person() \{\
	//code here \
\}\
\
Var a = Person() \
Var b = a \
\
This will cause a and b to point to the same piece of data allocated in memory. If you change the value of a b, a will be affected (and vice versa). \
\
When to use structs vs when to use classes \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Structs are more light weight and efficient than classes \'97 they are more static (classes are more dynamic so it requires a bit more support; this is bc you are modeling single instances). When structs need to be updated, the old copy is thrown away and a new struct is created in its place \
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}Use Structs for SwiftUI views \
{\listtext	\uc0\u8259 	}use Structs to model data that does not need to change/be updated \
{\listtext	\uc0\u8259 	}always default to structs if you are unsure \'97 if you find you need a class, just change the struct keyword to a class keyword \
{\listtext	\uc0\u8259 	}\
{\listtext	\uc0\u8259 	}\
SwiftUI views are lightweight structs that can be efficiently disposed of and recreated for updates as needed.\
}